<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <atom:link href="https://www.isa-afp.org/rss.xml" rel="self" type="application/rss+xml" />
    <title>Archive of Formal Proofs</title>
    <link>https://www.isa-afp.org</link>
    <description>
      The Archive of Formal Proofs is a collection of proof libraries, examples,
      and larger scientific developments, mechanically checked
      in the theorem prover Isabelle.
    </description>
    <pubDate>04 Feb 2022 00:00:00 +0000</pubDate>
    <item>
       <title>Enumeration of Equivalence Relations</title>
              <link>https://www.isa-afp.org/entries/Equivalence_Relation_Enumeration.html</link>
       <guid>https://www.isa-afp.org/entries/Equivalence_Relation_Enumeration.html</guid>
       <dc:creator> Emin Karayel       </dc:creator>
       <pubDate>04 Feb 2022 00:00:00 +0000</pubDate>
       <description>
&lt;p&gt;This entry contains a formalization of an algorithm
enumerating all equivalence relations on an initial segment of the
natural numbers. The approach follows the method described by Stanton
and White &lt;a
href=&#34;https://doi.org/10.1007/978-1-4612-4968-9&#34;&gt;[5,§
1.5]&lt;/a&gt; using restricted growth functions.&lt;/p&gt;
&lt;p&gt;The algorithm internally enumerates restricted growth
functions (as lists), whose equivalence kernels then form the
equivalence relations. This has the advantage that the representation
is compact and lookup of the relation reduces to a list lookup
operation.&lt;/p&gt; &lt;p&gt;The algorithm can also be used within a
proof and an example application is included, where a sequence of
variables is split by the possible partitions they can form.&lt;/p&gt;</description>
    </item>
    <item>
       <title>Quasi-Borel Spaces</title>
              <link>https://www.isa-afp.org/entries/Quasi_Borel_Spaces.html</link>
       <guid>https://www.isa-afp.org/entries/Quasi_Borel_Spaces.html</guid>
       <dc:creator> Michikazu Hirata, Yasuhiko Minamide, Tetsuya Sato       </dc:creator>
       <pubDate>03 Feb 2022 00:00:00 +0000</pubDate>
       <description>
The notion of quasi-Borel spaces was introduced by &lt;a
href=&#34;https://dl.acm.org/doi/10.5555/3329995.3330072&#34;&gt;
Heunen et al&lt;/a&gt;. The theory provides a suitable
denotational model for higher-order probabilistic programming
languages with continuous distributions. This entry is a formalization
of the theory of quasi-Borel spaces, including construction of
quasi-Borel spaces (product, coproduct, function spaces), the
adjunction between the category of measurable spaces and the category
of quasi-Borel spaces, and the probability monad on quasi-Borel
spaces. This entry also contains the formalization of the Bayesian
regression presented in the work of Heunen et al. This work is a part
of the work by same authors, &lt;i&gt;Program Logic for Higher-Order
Probabilistic Programs in Isabelle/HOL&lt;/i&gt;, which will be
published in the proceedings of the 16th International Symposium on
Functional and Logic Programming (FLOPS 2022).</description>
    </item>
    <item>
       <title>Duality of Linear Programming</title>
              <link>https://www.isa-afp.org/entries/LP_Duality.html</link>
       <guid>https://www.isa-afp.org/entries/LP_Duality.html</guid>
       <dc:creator> René Thiemann       </dc:creator>
       <pubDate>03 Feb 2022 00:00:00 +0000</pubDate>
       <description>
We formalize the weak and strong duality theorems of linear
programming. For the strong duality theorem we provide three
sufficient preconditions: both the primal problem and the dual problem
are satisfiable, the primal problem is satisfiable and bounded, or the
dual problem is satisfiable and bounded. The proofs are based on an
existing formalization of Farkas&#39; Lemma.</description>
    </item>
    <item>
       <title>First-Order Theory of Rewriting</title>
              <link>https://www.isa-afp.org/entries/FO_Theory_Rewriting.html</link>
       <guid>https://www.isa-afp.org/entries/FO_Theory_Rewriting.html</guid>
       <dc:creator> Alexander Lochmann, Bertram Felgenhauer       </dc:creator>
       <pubDate>02 Feb 2022 00:00:00 +0000</pubDate>
       <description>
The first-order theory of rewriting (FORT) is a decidable theory for
linear variable-separated rewrite systems. The decision procedure is
based on tree automata technique and an inference system presented in
&#34;Certifying Proofs in the First-Order Theory of Rewriting&#34;.
This AFP entry provides a formalization of the underlying decision
procedure. Moreover it allows to generate a function that can verify
each inference step via the code generation facility of Isabelle/HOL.
Additionally it contains the specification of a certificate language
(that allows to state proofs in FORT) and a formalized function that
allows to verify the validity of the proof. This gives software tool
authors, that implement the decision procedure, the possibility to
verify their output.</description>
    </item>
    <item>
       <title>Young's Inequality for Increasing Functions</title>
              <link>https://www.isa-afp.org/entries/Youngs_Inequality.html</link>
       <guid>https://www.isa-afp.org/entries/Youngs_Inequality.html</guid>
       <dc:creator> Lawrence C Paulson       </dc:creator>
       <pubDate>31 Jan 2022 00:00:00 +0000</pubDate>
       <description>
Young&#39;s inequality states that $$ ab \leq \int_0^a f(x)dx +
\int_0^b f^{-1}(y) dy $$ where $a\geq 0$, $b\geq 0$ and $f$ is
strictly increasing and continuous. Its proof is formalised following
&lt;a href=&#34;https://www.jstor.org/stable/2318018&#34;&gt;the
development&lt;/a&gt; by Cunningham and Grossman. Their idea is to
make the intuitive, geometric folklore proof rigorous by reasoning
about step functions. The lack of the Riemann integral makes the
development longer than one would like, but their argument is
reproduced faithfully.</description>
    </item>
    <item>
       <title>A Sequent Calculus Prover for First-Order Logic with Functions</title>
              <link>https://www.isa-afp.org/entries/FOL_Seq_Calc2.html</link>
       <guid>https://www.isa-afp.org/entries/FOL_Seq_Calc2.html</guid>
       <dc:creator> Asta Halkjær From, Frederik Krogsdal Jacobsen       </dc:creator>
       <pubDate>31 Jan 2022 00:00:00 +0000</pubDate>
       <description>
We formalize an automated theorem prover for first-order logic with
functions. The proof search procedure is based on sequent calculus and
we verify its soundness and completeness using the Abstract Soundness
and Abstract Completeness theories. Our analytic completeness proof
covers both open and closed formulas. Since our deterministic prover
considers only the subset of terms relevant to proving a given
sequent, we do so as well when building a countermodel from a failed
proof. We formally connect our prover with the proof system and
semantics of the existing SeCaV system. In particular, the
prover&#39;s output can be post-processed in Haskell to generate
human-readable SeCaV proofs which are also machine-verifiable proof
certificates.</description>
    </item>
    <item>
       <title>Interpolation Polynomials (in HOL-Algebra)</title>
              <link>https://www.isa-afp.org/entries/Interpolation_Polynomials_HOL_Algebra.html</link>
       <guid>https://www.isa-afp.org/entries/Interpolation_Polynomials_HOL_Algebra.html</guid>
       <dc:creator> Emin Karayel       </dc:creator>
       <pubDate>29 Jan 2022 00:00:00 +0000</pubDate>
       <description>
&lt;p&gt;A well known result from algebra is that, on any field, there
is exactly one polynomial of degree less than n interpolating n points
[&lt;a
href=&#34;https://doi.org/10.1017/CBO9780511814549&#34;&gt;1&lt;/a&gt;,
§7].&lt;/p&gt; &lt;p&gt;This entry contains a formalization of the
above result, as well as the following generalization in the case of
finite fields &lt;i&gt;F&lt;/i&gt;: There are
&lt;i&gt;|F|&lt;sup&gt;m-n&lt;/sup&gt;&lt;/i&gt; polynomials of degree
less than &lt;i&gt;m ≥ n&lt;/i&gt; interpolating the same n points,
where &lt;i&gt;|F|&lt;/i&gt; denotes the size of the domain of the
field. To establish the result the entry also includes a formalization
of Lagrange interpolation, which might be of independent
interest.&lt;/p&gt; &lt;p&gt;The formalized results are defined on the
algebraic structures from HOL-Algebra, which are distinct from the
type-class based structures defined in HOL. Note that there is an
existing formalization for polynomial interpolation and, in
particular, Lagrange interpolation by Thiemann and Yamada [&lt;a
href=&#34;https://www.isa-afp.org/entries/Polynomial_Interpolation.html&#34;&gt;2&lt;/a&gt;]
on the type-class based structures in HOL.&lt;/p&gt;</description>
    </item>
    <item>
       <title>Median Method</title>
              <link>https://www.isa-afp.org/entries/Median_Method.html</link>
       <guid>https://www.isa-afp.org/entries/Median_Method.html</guid>
       <dc:creator> Emin Karayel       </dc:creator>
       <pubDate>25 Jan 2022 00:00:00 +0000</pubDate>
       <description>
&lt;p&gt;The median method is an amplification result for randomized
approximation algorithms described in [&lt;a
href=&#34;https://doi.org/10.1006/jcss.1997.1545&#34;&gt;1&lt;/a&gt;].
Given an algorithm whose result is in a desired interval with a
probability larger than &lt;i&gt;1/2&lt;/i&gt;, it is possible to
improve the success probability, by running the algorithm multiple
times independently and using the median. In contrast to using the
mean, the amplification of the success probability grows exponentially
with the number of independent runs.&lt;/p&gt; &lt;p&gt;This entry
contains a formalization of the underlying theorem: Given a sequence
of n independent random variables, which are in a desired interval
with a probability &lt;i&gt;1/2 + a&lt;/i&gt;. Then their median will
be in the desired interval with a probability of &lt;i&gt;1 −
exp(−2a&lt;sup&gt;2&lt;/sup&gt; n)&lt;/i&gt;. In particular, the
success probability approaches &lt;i&gt;1&lt;/i&gt; exponentially with
the number of variables.&lt;/p&gt; &lt;p&gt;In addition to that, this
entry also contains a proof that order-statistics of Borel-measurable
random variables are themselves measurable and that generalized
intervals in linearly ordered Borel-spaces are measurable.&lt;/p&gt;</description>
    </item>
    <item>
       <title>Actuarial Mathematics</title>
              <link>https://www.isa-afp.org/entries/Actuarial_Mathematics.html</link>
       <guid>https://www.isa-afp.org/entries/Actuarial_Mathematics.html</guid>
       <dc:creator> Yosuke Ito       </dc:creator>
       <pubDate>23 Jan 2022 00:00:00 +0000</pubDate>
       <description>
Actuarial Mathematics is a theory in applied mathematics, which is
mainly used for determining the prices of insurance products and
evaluating the liability of a company associating with insurance
contracts. It is related to calculus, probability theory and financial
theory, etc. In this entry, I formalize the very basic part of
Actuarial Mathematics in Isabelle/HOL. The first formalization is
about the theory of interest which deals with interest rates, present
value factors, an annuity certain, etc. I have already formalized the
basic part of Actuarial Mathematics in Coq
(https://github.com/Yosuke-Ito-345/Actuary). This entry is currently
the partial translation and a little generalization of the Coq
formalization. The further translation in Isabelle/HOL is now
proceeding.</description>
    </item>
    <item>
       <title>Irrational numbers from THE BOOK</title>
              <link>https://www.isa-afp.org/entries/Irrationals_From_THEBOOK.html</link>
       <guid>https://www.isa-afp.org/entries/Irrationals_From_THEBOOK.html</guid>
       <dc:creator> Lawrence C Paulson       </dc:creator>
       <pubDate>08 Jan 2022 00:00:00 +0000</pubDate>
       <description>
An elementary proof is formalised: that &lt;em&gt;exp r&lt;/em&gt; is irrational for
every nonzero rational number &lt;em&gt;r&lt;/em&gt;. The mathematical development comes
from the well-known volume &lt;em&gt;Proofs from THE BOOK&lt;/em&gt;,
by Aigner and Ziegler, who credit the idea to Hermite. The development
illustrates a number of basic Isabelle techniques: the manipulation of
summations, the calculation of quite complicated derivatives and the
estimation of integrals. We also see how to import another AFP entry (Stirling&#39;s formula).
As for the theorem itself, note that a much stronger and more general
result (the Hermite--Lindemann--Weierstraß transcendence theorem) is
already available in the AFP.</description>
    </item>
    <item>
       <title>Knight's Tour Revisited Revisited</title>
              <link>https://www.isa-afp.org/entries/Knights_Tour.html</link>
       <guid>https://www.isa-afp.org/entries/Knights_Tour.html</guid>
       <dc:creator> Lukas Koller       </dc:creator>
       <pubDate>04 Jan 2022 00:00:00 +0000</pubDate>
       <description>
This is a formalization of the article &lt;i&gt;Knight&#39;s Tour Revisited&lt;/i&gt; by
Cull and De Curtins where they prove the existence of a Knight&#39;s
path for arbitrary &lt;i&gt;n &amp;times; m&lt;/i&gt;-boards with &lt;i&gt;min(n,m) &amp;ge;
5&lt;/i&gt;. If &lt;i&gt;n &amp;middot; m&lt;/i&gt; is even, then there exists a Knight&#39;s
circuit.  A Knight&#39;s Path is a sequence of moves of a Knight on a
chessboard s.t. the Knight visits every square of a chessboard
exactly once.  Finding a Knight&#39;s path is a an instance of the
Hamiltonian path problem. A Knight&#39;s circuit is a Knight&#39;s path,
where additionally the Knight can move from the last square to the
first square of the path, forming a loop.  During the formalization
two mistakes in the original proof were discovered. These mistakes
are corrected in this formalization.</description>
    </item>
    <item>
       <title>Hyperdual Numbers and Forward Differentiation</title>
              <link>https://www.isa-afp.org/entries/Hyperdual.html</link>
       <guid>https://www.isa-afp.org/entries/Hyperdual.html</guid>
       <dc:creator> Filip Smola, Jacques Fleuriot       </dc:creator>
       <pubDate>31 Dec 2021 00:00:00 +0000</pubDate>
       <description>
&lt;p&gt;Hyperdual numbers are ones with a real component and a number
of infinitesimal components, usually written as $a_0 + a_1 \cdot
\epsilon_1 + a_2 \cdot \epsilon_2 + a_3 \cdot \epsilon_1\epsilon_2$.
They have been proposed by &lt;a
href=&#34;https://doi.org/10.2514/6.2011-886&#34;&gt;Fike and
Alonso&lt;/a&gt; in an approach to automatic
differentiation.&lt;/p&gt; &lt;p&gt;In this entry we formalise
hyperdual numbers and their application to forward differentiation. We
show them to be an instance of multiple algebraic structures and then,
along with facts about twice-differentiability, we define what we call
the hyperdual extensions of functions on real-normed fields. This
extension formally represents the proposed way that the first and
second derivatives of a function can be automatically calculated. We
demonstrate it on the standard logistic function $f(x) = \frac{1}{1 +
e^{-x}}$ and also reproduce the example analytic function $f(x) =
\frac{e^x}{\sqrt{sin(x)^3 + cos(x)^3}}$ used for demonstration by Fike
and Alonso.&lt;/p&gt;</description>
    </item>
    <item>
       <title>Gale-Shapley Algorithm</title>
              <link>https://www.isa-afp.org/entries/Gale_Shapley.html</link>
       <guid>https://www.isa-afp.org/entries/Gale_Shapley.html</guid>
       <dc:creator> Tobias Nipkow       </dc:creator>
       <pubDate>29 Dec 2021 00:00:00 +0000</pubDate>
       <description>
This is a stepwise refinement and proof of the Gale-Shapley stable
matching (or marriage) algorithm down to executable code. Both a
purely functional implementation based on lists and a functional
implementation based on efficient arrays (provided by the Collections
Framework in the AFP) are developed. The latter implementation runs in
time &lt;i&gt;O(n&lt;sup&gt;2&lt;/sup&gt;)&lt;/i&gt; where
&lt;i&gt;n&lt;/i&gt; is the cardinality of the two sets to be matched.</description>
    </item>
    <item>
       <title>Roth's Theorem on Arithmetic Progressions</title>
              <link>https://www.isa-afp.org/entries/Roth_Arithmetic_Progressions.html</link>
       <guid>https://www.isa-afp.org/entries/Roth_Arithmetic_Progressions.html</guid>
       <dc:creator> Chelsea Edmonds, Angeliki Koutsoukou-Argyraki, Lawrence C. Paulson       </dc:creator>
       <pubDate>28 Dec 2021 00:00:00 +0000</pubDate>
       <description>
We formalise a proof of Roth&#39;s Theorem on Arithmetic
Progressions, a major result in additive combinatorics on the
existence of 3-term arithmetic progressions in subsets of natural
numbers. To this end, we follow a proof using graph regularity. We
employ our recent formalisation of Szemerédi&#39;s Regularity Lemma,
a major result in extremal graph theory, which we use here to prove
the Triangle Counting Lemma and the Triangle Removal Lemma. Our
sources are Yufei Zhao&#39;s MIT lecture notes
&#34;&lt;a href=&#34;https://ocw.mit.edu/courses/mathematics/18-217-graph-theory-and-additive-combinatorics-fall-2019/lecture-notes/MIT18_217F19_ch3.pdf&#34;&gt;Graph Theory and Additive Combinatorics&lt;/a&gt;&#34;
(revised version &lt;a href=&#34;https://yufeizhao.com/gtac/gtac17.pdf&#34;&gt;here&lt;/a&gt;)
and W.T. Gowers&#39;s Cambridge lecture notes
&#34;&lt;a href=&#34;https://www.dpmms.cam.ac.uk/~par31/notes/tic.pdf&#34;&gt;Topics in Combinatorics&lt;/a&gt;&#34;.
We also refer to the University of
Georgia notes by Stephanie Bell and Will Grodzicki,
&#34;&lt;a href=&#34;http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.432.327&#34;&gt;Using Szemerédi&#39;s Regularity Lemma to Prove Roth&#39;s Theorem&lt;/a&gt;&#34;.</description>
    </item>
    <item>
       <title>Markov Decision Processes with Rewards</title>
              <link>https://www.isa-afp.org/entries/MDP-Rewards.html</link>
       <guid>https://www.isa-afp.org/entries/MDP-Rewards.html</guid>
       <dc:creator> Maximilian Schäffeler, Mohammad Abdulaziz       </dc:creator>
       <pubDate>16 Dec 2021 00:00:00 +0000</pubDate>
       <description>
We present a formalization of Markov Decision Processes with rewards.
In particular we first build on Hölzl&#39;s formalization  of MDPs
(AFP entry: Markov_Models) and extend them with rewards. We proceed
with an analysis of the expected total discounted reward criterion for
infinite horizon MDPs. The central result is the construction of the
iteration rule for the Bellman operator. We prove the optimality
equations for this operator and show the existence of an optimal
stationary deterministic solution. The analysis can be used to obtain
dynamic programming algorithms such as value iteration and policy
iteration to solve MDPs with formal guarantees. Our formalization is
based on chapters 5 and 6 in Puterman&#39;s book &#34;Markov
Decision Processes: Discrete Stochastic Dynamic Programming&#34;.</description>
    </item>
    <item>
       <title>Verified Algorithms for Solving Markov Decision Processes</title>
              <link>https://www.isa-afp.org/entries/MDP-Algorithms.html</link>
       <guid>https://www.isa-afp.org/entries/MDP-Algorithms.html</guid>
       <dc:creator> Maximilian Schäffeler, Mohammad Abdulaziz       </dc:creator>
       <pubDate>16 Dec 2021 00:00:00 +0000</pubDate>
       <description>
We present a formalization of algorithms for solving Markov Decision
Processes (MDPs) with formal guarantees on the optimality of their
solutions. In particular we build on our analysis of the Bellman
operator for discounted infinite horizon MDPs. From the iterator rule
on the Bellman operator we directly derive executable value iteration
and policy iteration algorithms to iteratively solve finite MDPs. We
also prove correct optimized versions of value iteration that use
matrix splittings to improve the convergence rate. In particular, we
formally verify Gauss-Seidel value iteration and modified policy
iteration. The algorithms are evaluated on two standard examples from
the literature, namely, inventory management and gridworld. Our
formalization covers most of chapter 6 in Puterman&#39;s book
&#34;Markov Decision Processes: Discrete Stochastic Dynamic
Programming&#34;.</description>
    </item>
    <item>
       <title>Regular Tree Relations</title>
              <link>https://www.isa-afp.org/entries/Regular_Tree_Relations.html</link>
       <guid>https://www.isa-afp.org/entries/Regular_Tree_Relations.html</guid>
       <dc:creator> Alexander Lochmann, Bertram Felgenhauer, Christian Sternagel, René Thiemann, Thomas Sternagel       </dc:creator>
       <pubDate>15 Dec 2021 00:00:00 +0000</pubDate>
       <description>
Tree automata have good closure properties and therefore a commonly
used to prove/disprove properties. This formalization contains among
other things the proofs of many closure properties of tree automata
(anchored) ground tree transducers and regular relations. Additionally
it includes the well known pumping lemma and a lifting of the Myhill
Nerode theorem for regular languages to tree languages.  We want to
mention the existence of a &lt;a
href=&#34;https://www.isa-afp.org/entries/Tree-Automata.html&#34;&gt;tree
automata APF-entry&lt;/a&gt; developed by Peter Lammich. His work is
based on epsilon free top-down tree automata, while this entry builds
on bottom-up tree auotamta with epsilon transitions. Moreover our
formalization relies on the &lt;a
href=&#34;https://www.isa-afp.org/entries/Collections.html&#34;&gt;Collections
Framework&lt;/a&gt;, also by Peter Lammich, to obtain efficient code.
All proven constructions of the closure properties are exportable
using the Isabelle/HOL code generation facilities.</description>
    </item>
    <item>
       <title>Simplicial Complexes and Boolean functions</title>
              <link>https://www.isa-afp.org/entries/Simplicial_complexes_and_boolean_functions.html</link>
       <guid>https://www.isa-afp.org/entries/Simplicial_complexes_and_boolean_functions.html</guid>
       <dc:creator> Jesús Aransay, Alejandro del Campo, Julius Michaelis       </dc:creator>
       <pubDate>29 Nov 2021 00:00:00 +0000</pubDate>
       <description>
In this work we formalise the isomorphism between simplicial complexes
of dimension $n$ and monotone Boolean functions in $n$ variables,
mainly following the definitions and results as introduced by N. A.
Scoville. We also take advantage of the AFP
representation of &lt;a href=&#34;https://www.isa-afp.org/entries/ROBDD.html&#34;&gt;ROBDD&lt;/a&gt;
(Reduced Ordered Binary Decision Diagrams) to compute the ROBDD representation of a
given simplicial complex (by means of the isomorphism to Boolean
functions). Some examples of simplicial complexes and associated
Boolean functions are also presented.</description>
    </item>
    <item>
       <title>van Emde Boas Trees</title>
              <link>https://www.isa-afp.org/entries/Van_Emde_Boas_Trees.html</link>
       <guid>https://www.isa-afp.org/entries/Van_Emde_Boas_Trees.html</guid>
       <dc:creator> Thomas Ammer, Peter Lammich       </dc:creator>
       <pubDate>23 Nov 2021 00:00:00 +0000</pubDate>
       <description>
The &lt;em&gt;van Emde Boas tree&lt;/em&gt; or &lt;em&gt;van Emde Boas
priority queue&lt;/em&gt; is a data structure supporting membership
test, insertion, predecessor and successor search, minimum and maximum
determination and deletion in &lt;em&gt;O(log log U)&lt;/em&gt; time, where &lt;em&gt;U =
0,...,2&lt;sup&gt;n-1&lt;/sup&gt;&lt;/em&gt; is the overall range to be
considered. &lt;p/&gt; The presented formalization follows Chapter 20
of the popular &lt;em&gt;Introduction to Algorithms (3rd
ed.)&lt;/em&gt; by Cormen, Leiserson, Rivest and Stein (CLRS),
extending the list of formally verified CLRS algorithms. Our current
formalization is based on the first author&#39;s bachelor&#39;s
thesis. &lt;p/&gt; First, we prove correct a
&lt;em&gt;functional&lt;/em&gt; implementation, w.r.t. an abstract
data type for sets. Apart from functional correctness, we show a
resource bound, and runtime bounds w.r.t. manually defined timing
functions for the operations. &lt;p/&gt; Next, we refine the
operations to Imperative HOL with time, and show correctness and
complexity. This yields a practically more efficient implementation,
and eliminates the manually defined timing functions from the trusted
base of the proof.</description>
    </item>
    <item>
       <title>Foundation of geometry in planes, and some complements: Excluding the parallel axioms</title>
              <link>https://www.isa-afp.org/entries/Foundation_of_geometry.html</link>
       <guid>https://www.isa-afp.org/entries/Foundation_of_geometry.html</guid>
       <dc:creator> Fumiya Iwama       </dc:creator>
       <pubDate>22 Nov 2021 00:00:00 +0000</pubDate>
       <description>
&#34;Foundations of Geometry&#34; is a mathematical book written by
Hilbert in 1899. This entry is a complete formalization of
&#34;Incidence&#34; (excluding cubic axioms), &#34;Order&#34; and
&#34;Congruence&#34; (excluding point sequences) of the axioms
constructed in this book. In addition, the theorem of the problem
about the part that is treated implicitly and is not clearly stated in
it is being carried out in parallel.</description>
    </item>
    <item>
       <title>The Hahn and Jordan Decomposition Theorems</title>
              <link>https://www.isa-afp.org/entries/Hahn_Jordan_Decomposition.html</link>
       <guid>https://www.isa-afp.org/entries/Hahn_Jordan_Decomposition.html</guid>
       <dc:creator> Marie Cousin, Mnacho Echenim, Hervé Guiol       </dc:creator>
       <pubDate>19 Nov 2021 00:00:00 +0000</pubDate>
       <description>
In this work we formalize the Hahn decomposition theorem for signed
measures, namely that any measure space for a signed measure can be
decomposed into a positive and a negative set, where every measurable
subset of the positive one has a positive measure, and every
measurable subset of the negative one has a negative measure. We also
formalize the Jordan decomposition theorem as a corollary, which
states that the signed measure under consideration admits a unique
decomposition into a difference of two positive measures, at least one
of which is finite.</description>
    </item>
    <item>
       <title>Exploring Simplified Variants of Gödel’s Ontological Argument in Isabelle/HOL</title>
              <link>https://www.isa-afp.org/entries/SimplifiedOntologicalArgument.html</link>
       <guid>https://www.isa-afp.org/entries/SimplifiedOntologicalArgument.html</guid>
       <dc:creator> Christoph Benzmüller       </dc:creator>
       <pubDate>08 Nov 2021 00:00:00 +0000</pubDate>
       <description>
&lt;p&gt;Simplified variants of Gödel&#39;s ontological argument are
explored. Among those is a particularly interesting simplified
argument which is (i) valid already in basic
modal logics K or KT, (ii) which does not suffer from modal collapse,
and (iii) which avoids the rather complex predicates of essence (Ess.)
and necessary existence (NE) as used by Gödel.
&lt;/p&gt;&lt;p&gt;
Whether the presented variants increase or decrease the
attractiveness and persuasiveness of the ontological argument is a
question I would like to pass on to philosophy and theology.
&lt;/p&gt;</description>
    </item>
    <item>
       <title>Real Exponents as the Limits of Sequences of Rational Exponents</title>
              <link>https://www.isa-afp.org/entries/Real_Power.html</link>
       <guid>https://www.isa-afp.org/entries/Real_Power.html</guid>
       <dc:creator> Jacques D. Fleuriot       </dc:creator>
       <pubDate>08 Nov 2021 00:00:00 +0000</pubDate>
       <description>
In this formalisation, we  construct real exponents as the limits of
sequences of rational exponents. In particular, if $a \ge 1$ and $x
\in \mathbb{R}$, we choose an increasing rational sequence $r_n$ such
that $\lim_{n\to\infty} {r_n} = x$. Then the sequence $a^{r_n}$ is
increasing and if $r$ is any rational number such that $r &gt; x$,
$a^{r_n}$ is bounded above by $a^r$. By the convergence criterion for
monotone sequences, $a^{r_n}$ converges. We define $a^ x =
\lim_{n\to\infty} a^{r_n}$ and show that it has the expected
properties (for $a \ge 0$).  This particular construction of real
exponents is needed instead of the usual one using the natural
logarithm and exponential functions (which already exists in Isabelle)
to support our mechanical derivation of Euler&#39;s exponential
series as an ``infinite polynomial&#34;. Aside from helping us avoid
circular reasoning, this is, as far as we are aware, the first time
real exponents are mechanised in this way within a proof assistant.</description>
    </item>
    <item>
       <title>Automating Public Announcement Logic and the Wise Men Puzzle in Isabelle/HOL</title>
              <link>https://www.isa-afp.org/entries/PAL.html</link>
       <guid>https://www.isa-afp.org/entries/PAL.html</guid>
       <dc:creator> Christoph Benzmüller, Sebastian Reiche       </dc:creator>
       <pubDate>08 Nov 2021 00:00:00 +0000</pubDate>
       <description>
We present a shallow embedding of public announcement logic (PAL) with
relativized general knowledge in HOL. We then use PAL to obtain an
elegant encoding of the wise men puzzle, which we solve automatically
using sledgehammer.</description>
    </item>
    <item>
       <title>Factorization of Polynomials with Algebraic Coefficients</title>
              <link>https://www.isa-afp.org/entries/Factor_Algebraic_Polynomial.html</link>
       <guid>https://www.isa-afp.org/entries/Factor_Algebraic_Polynomial.html</guid>
       <dc:creator> Manuel Eberl, René Thiemann       </dc:creator>
       <pubDate>08 Nov 2021 00:00:00 +0000</pubDate>
       <description>
The AFP already contains a verified implementation of algebraic
numbers. However, it is has a severe limitation in its factorization
algorithm of real and complex polynomials: the factorization is only
guaranteed to succeed if the coefficients of the polynomial are
rational numbers. In this work, we verify an algorithm to factor all
real and complex polynomials whose coefficients are algebraic. The
existence of such an algorithm proves in a constructive way that the
set of complex algebraic numbers is algebraically closed. Internally,
the algorithm is based on resultants of multivariate polynomials and
an approximation algorithm using interval arithmetic.</description>
    </item>
    <item>
       <title>Szemerédi's Regularity Lemma</title>
              <link>https://www.isa-afp.org/entries/Szemeredi_Regularity.html</link>
       <guid>https://www.isa-afp.org/entries/Szemeredi_Regularity.html</guid>
       <dc:creator> Chelsea Edmonds, Angeliki Koutsoukou-Argyraki, Lawrence C. Paulson       </dc:creator>
       <pubDate>05 Nov 2021 00:00:00 +0000</pubDate>
       <description>
&lt;a
href=&#34;https://en.wikipedia.org/wiki/Szemerédi_regularity_lemma&#34;&gt;Szemerédi&#39;s
regularity lemma&lt;/a&gt; is a key result in the study of large
graphs. It asserts the existence of an upper bound on the number of parts
the vertices of a graph need to be partitioned into such that the
edges between the parts are random in a certain sense. This bound
depends only on the desired precision and not on the graph itself, in
the spirit of Ramsey&#39;s theorem. The formalisation follows online
course notes by &lt;a
href=&#34;https://www.dpmms.cam.ac.uk/~par31/notes/tic.pdf&#34;&gt;Tim
Gowers&lt;/a&gt; and &lt;a
href=&#34;https://yufeizhao.com/gtac/gtac.pdf&#34;&gt;Yufei
Zhao&lt;/a&gt;.</description>
    </item>
    <item>
       <title>Quantum and Classical Registers</title>
              <link>https://www.isa-afp.org/entries/Registers.html</link>
       <guid>https://www.isa-afp.org/entries/Registers.html</guid>
       <dc:creator> Dominique Unruh       </dc:creator>
       <pubDate>28 Oct 2021 00:00:00 +0000</pubDate>
       <description>
A formalization of the theory of quantum and classical registers as
developed by (Unruh, Quantum and Classical Registers). In a nutshell,
a register refers to a part of a larger memory or system that can be
accessed independently.  Registers can be constructed from other
registers and several (compatible) registers can be composed. This
formalization develops both the generic theory of registers as well as
specific instantiations for classical and quantum registers.</description>
    </item>
    <item>
       <title>Belief Revision Theory</title>
              <link>https://www.isa-afp.org/entries/Belief_Revision.html</link>
       <guid>https://www.isa-afp.org/entries/Belief_Revision.html</guid>
       <dc:creator> Valentin Fouillard, Safouan Taha, Frédéric Boulanger, Nicolas Sabouret       </dc:creator>
       <pubDate>19 Oct 2021 00:00:00 +0000</pubDate>
       <description>
The 1985 paper by Carlos Alchourrón, Peter Gärdenfors, and David
Makinson (AGM), “On the Logic of Theory Change: Partial Meet
Contraction and Revision Functions” launches a large and rapidly
growing literature that employs formal models and logics to handle
changing beliefs of a rational agent and to take into account new
piece of information observed by this agent. In 2011, a review book
titled &#34;AGM 25 Years: Twenty-Five Years of Research in Belief
Change&#34; was edited to summarize the first twenty five years of
works based on AGM.  This  HOL-based  AFP entry is a faithful
formalization of the AGM operators (e.g. contraction, revision,
remainder ...) axiomatized in the original paper. It also contains the
proofs of all the theorems stated in the paper that show how these
operators combine. Both proofs of Harper and Levi identities are
established.</description>
    </item>
    <item>
       <title>X86 instruction semantics and basic block symbolic execution</title>
              <link>https://www.isa-afp.org/entries/X86_Semantics.html</link>
       <guid>https://www.isa-afp.org/entries/X86_Semantics.html</guid>
       <dc:creator> Freek Verbeek, Abhijith Bharadwaj, Joshua Bockenek, Ian Roessle, Timmy Weerwag, Binoy Ravindran       </dc:creator>
       <pubDate>13 Oct 2021 00:00:00 +0000</pubDate>
       <description>
This AFP entry provides semantics for roughly 120 different X86-64
assembly instructions. These instructions include various moves,
arithmetic/logical operations, jumps, call/return, SIMD extensions and
others. External functions are supported by allowing a user to provide
custom semantics for these calls. Floating-point operations are mapped
to uninterpreted functions. The model provides semantics for register
aliasing and a byte-level little-endian memory model. The semantics
are purposefully incomplete, but overapproximative. For example, the
precise effect of flags may be undefined for certain instructions, or
instructions may simply have no semantics at all. In those cases, the
semantics are mapped to universally quantified uninterpreted terms
from a locale. Second, this entry provides a method to symbolic
execution of basic blocks. The method, called
&#39;&#39;se_step&#39;&#39; (for: symbolic execution step) fetches
an instruction and updates the current symbolic state while keeping
track of assumptions made over the memory model. A key component is a
set of theorems that prove how reads from memory resolve after writes
have occurred. Thirdly, this entry provides a parser that allows the
user to copy-paste the output of the standard disassembly tool objdump
into Isabelle/HOL. A couple small and explanatory examples are
included, including functions from the word count program. Several
examples can be supplied upon request (they are not included due to
the running time of verification): functions from the floating-point
modulo function from FDLIBM, the GLIBC strlen function and the
CoreUtils SHA256 implementation.</description>
    </item>
    <item>
       <title>Algebras for Iteration, Infinite Executions and Correctness of Sequential Computations</title>
              <link>https://www.isa-afp.org/entries/Correctness_Algebras.html</link>
       <guid>https://www.isa-afp.org/entries/Correctness_Algebras.html</guid>
       <dc:creator> Walter Guttmann       </dc:creator>
       <pubDate>12 Oct 2021 00:00:00 +0000</pubDate>
       <description>
We study models of state-based non-deterministic sequential
computations and describe them using algebras. We propose algebras
that describe iteration for strict and non-strict computations. They
unify computation models which differ in the fixpoints used to
represent iteration. We propose algebras that describe the infinite
executions of a computation. They lead to a unified approximation
order and results that connect fixpoints in the approximation and
refinement orders. This unifies the semantics of recursion for a range
of computation models. We propose algebras that describe preconditions
and the effect of while-programs under postconditions. They unify
correctness statements in two dimensions: one statement applies in
various computation models to various correctness claims.</description>
    </item>
  </channel>
</rss>
