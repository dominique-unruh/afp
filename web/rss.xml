<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <atom:link href="https://www.isa-afp.org/rss.xml" rel="self" type="application/rss+xml" />
    <title>Archive of Formal Proofs</title>
    <link>https://www.isa-afp.org</link>
    <description>
      The Archive of Formal Proofs is a collection of proof libraries, examples,
      and larger scientific developments, mechanically checked
      in the theorem prover Isabelle.
    </description>
    <pubDate>11 Jan 2021 00:00:00 +0000</pubDate>
    <item>
       <title>JinjaDCI: a Java semantics with dynamic class initialization</title>
              <link>https://www.isa-afp.org/entries/JinjaDCI.html</link>
       <guid>https://www.isa-afp.org/entries/JinjaDCI.html</guid>
       <dc:creator> Susannah Mansky       </dc:creator>
       <pubDate>11 Jan 2021 00:00:00 +0000</pubDate>
       <description>
We extend Jinja to include static fields, methods, and instructions,
and dynamic class initialization, based on the Java SE 8
specification. This includes extension of definitions and proofs. This
work is partially described in Mansky and Gunter&#39;s paper at CPP
2019 and Mansky&#39;s doctoral thesis (UIUC, 2020).</description>
    </item>
    <item>
       <title>Cofinality and the Delta System Lemma</title>
              <link>https://www.isa-afp.org/entries/Delta_System_Lemma.html</link>
       <guid>https://www.isa-afp.org/entries/Delta_System_Lemma.html</guid>
       <dc:creator> Pedro Sánchez Terraf       </dc:creator>
       <pubDate>27 Dec 2020 00:00:00 +0000</pubDate>
       <description>
We formalize the basic results on cofinality of linearly ordered sets
and ordinals and Šanin’s Lemma for uncountable families of finite
sets. This last result is used to prove the countable chain condition
for Cohen posets. We work in the set theory framework of Isabelle/ZF,
using the Axiom of Choice as needed.</description>
    </item>
    <item>
       <title>Topological semantics for paraconsistent and paracomplete logics</title>
              <link>https://www.isa-afp.org/entries/Topological_Semantics.html</link>
       <guid>https://www.isa-afp.org/entries/Topological_Semantics.html</guid>
       <dc:creator> David Fuenmayor       </dc:creator>
       <pubDate>17 Dec 2020 00:00:00 +0000</pubDate>
       <description>
We introduce a generalized topological semantics for paraconsistent
and paracomplete logics by drawing upon early works on topological
Boolean algebras (cf. works by Kuratowski, Zarycki, McKinsey &amp;
Tarski, etc.). In particular, this work exemplarily illustrates the
shallow semantical embeddings approach (&lt;a
href=&#34;http://dx.doi.org/10.1007/s11787-012-0052-y&#34;&gt;SSE&lt;/a&gt;)
employing the proof assistant Isabelle/HOL. By means of the SSE
technique we can effectively harness theorem provers, model finders
and &#39;hammers&#39; for reasoning with quantified non-classical
logics.</description>
    </item>
    <item>
       <title>Relational Minimum Spanning Tree Algorithms</title>
              <link>https://www.isa-afp.org/entries/Relational_Minimum_Spanning_Trees.html</link>
       <guid>https://www.isa-afp.org/entries/Relational_Minimum_Spanning_Trees.html</guid>
       <dc:creator> Walter Guttmann, Nicolas Robinson-O'Brien       </dc:creator>
       <pubDate>08 Dec 2020 00:00:00 +0000</pubDate>
       <description>
We verify the correctness of Prim&#39;s, Kruskal&#39;s and
Borůvka&#39;s minimum spanning tree algorithms based on algebras for
aggregation and minimisation.</description>
    </item>
    <item>
       <title>The Relational Method with Message Anonymity for the Verification of Cryptographic Protocols</title>
              <link>https://www.isa-afp.org/entries/Relational_Method.html</link>
       <guid>https://www.isa-afp.org/entries/Relational_Method.html</guid>
       <dc:creator> Pasquale Noce       </dc:creator>
       <pubDate>05 Dec 2020 00:00:00 +0000</pubDate>
       <description>
This paper introduces a new method for the formal verification of
cryptographic protocols, the relational method, derived from
Paulson&#39;s inductive method by means of some enhancements aimed at
streamlining formal definitions and proofs, specially for protocols
using public key cryptography. Moreover, this paper proposes a method
to formalize a further security property, message anonymity, in
addition to message confidentiality and authenticity.  The relational
method, including message anonymity, is then applied to the
verification of a sample authentication protocol, comprising Password
Authenticated Connection Establishment (PACE) with Chip Authentication
Mapping followed by the explicit verification of an additional
password over the PACE secure channel.</description>
    </item>
    <item>
       <title>Isabelle Marries Dirac: a Library for Quantum Computation and Quantum Information</title>
              <link>https://www.isa-afp.org/entries/Isabelle_Marries_Dirac.html</link>
       <guid>https://www.isa-afp.org/entries/Isabelle_Marries_Dirac.html</guid>
       <dc:creator> Anthony Bordg, Hanna Lachnitt, Yijun He       </dc:creator>
       <pubDate>22 Nov 2020 00:00:00 +0000</pubDate>
       <description>
This work is an effort to formalise some quantum algorithms and
results in quantum information theory. Formal methods being critical
for the safety and security of algorithms and protocols, we foresee
their widespread use for quantum computing in the future. We have
developed a large library for quantum computing in Isabelle based on a
matrix representation for quantum circuits, successfully formalising
the no-cloning theorem, quantum teleportation, Deutsch&#39;s
algorithm, the Deutsch-Jozsa algorithm and the quantum Prisoner&#39;s
Dilemma.</description>
    </item>
    <item>
       <title>The HOL-CSP Refinement Toolkit</title>
              <link>https://www.isa-afp.org/entries/CSP_RefTK.html</link>
       <guid>https://www.isa-afp.org/entries/CSP_RefTK.html</guid>
       <dc:creator> Safouan Taha, Burkhart Wolff, Lina Ye       </dc:creator>
       <pubDate>19 Nov 2020 00:00:00 +0000</pubDate>
       <description>
We use a formal development for CSP, called HOL-CSP2.0, to analyse a
family of refinement notions, comprising classic and new ones. This
analysis enables to derive a number of properties that allow to deepen
the understanding of these notions, in particular with respect to
specification decomposition principles for the case of infinite sets
of events. The established relations between the refinement relations
help to clarify some obscure points in the CSP literature, but also
provide a weapon for shorter refinement proofs. Furthermore, we
provide a framework for state-normalisation allowing to formally
reason on parameterised process architectures. As a result, we have a
modern environment for formal proofs of concurrent systems that allow
for the combination of general infinite processes with locally finite
ones in a logically safe way. We demonstrate these
verification-techniques for classical, generalised examples: The
CopyBuffer for arbitrary data and the Dijkstra&#39;s Dining
Philosopher Problem of arbitrary size.</description>
    </item>
    <item>
       <title>Verified SAT-Based AI Planning</title>
              <link>https://www.isa-afp.org/entries/Verified_SAT_Based_AI_Planning.html</link>
       <guid>https://www.isa-afp.org/entries/Verified_SAT_Based_AI_Planning.html</guid>
       <dc:creator> Mohammad Abdulaziz, Friedrich Kurz       </dc:creator>
       <pubDate>29 Oct 2020 00:00:00 +0000</pubDate>
       <description>
We present an executable formally verified SAT encoding of classical
AI planning that is based on the encodings by Kautz and Selman and the
one by Rintanen et al. The encoding was experimentally tested and
shown to be usable for reasonably sized standard AI planning
benchmarks. We also use it as a reference to test a state-of-the-art
SAT-based planner, showing that it sometimes falsely claims that
problems have no solutions of certain lengths. The formalisation in
this submission was described in an independent publication.</description>
    </item>
    <item>
       <title>AI Planning Languages Semantics</title>
              <link>https://www.isa-afp.org/entries/AI_Planning_Languages_Semantics.html</link>
       <guid>https://www.isa-afp.org/entries/AI_Planning_Languages_Semantics.html</guid>
       <dc:creator> Mohammad Abdulaziz, Peter Lammich       </dc:creator>
       <pubDate>29 Oct 2020 00:00:00 +0000</pubDate>
       <description>
This is an Isabelle/HOL formalisation of the semantics of the
multi-valued planning tasks language that is used by the planning
system Fast-Downward, the STRIPS fragment of the Planning Domain
Definition Language (PDDL), and the STRIPS soundness meta-theory
developed by Vladimir Lifschitz. It also contains formally verified
checkers for checking the well-formedness of problems specified in
either language as well the correctness of potential solutions. The
formalisation in this entry was described in an earlier publication.</description>
    </item>
    <item>
       <title>A Sound Type System for Physical Quantities, Units, and Measurements</title>
              <link>https://www.isa-afp.org/entries/Physical_Quantities.html</link>
       <guid>https://www.isa-afp.org/entries/Physical_Quantities.html</guid>
       <dc:creator> Simon Foster, Burkhart Wolff       </dc:creator>
       <pubDate>20 Oct 2020 00:00:00 +0000</pubDate>
       <description>
The present Isabelle theory builds a formal model for both the
International System of Quantities (ISQ) and the International System
of Units (SI), which are both fundamental for physics and engineering.
Both the ISQ and the SI are deeply integrated into Isabelle&#39;s
type system. Quantities are parameterised by dimension types, which
correspond to base vectors, and thus only quantities of the same
dimension can be equated. Since the underlying &#34;algebra of
quantities&#34; induces congruences on quantity and SI types,
specific tactic support is developed to capture these. Our
construction is validated by a test-set of known equivalences between
both quantities and SI units. Moreover, the presented theory can be
used for type-safe conversions between the SI system and others, like
the British Imperial System (BIS).</description>
    </item>
    <item>
       <title>Finite Map Extras</title>
              <link>https://www.isa-afp.org/entries/Finite-Map-Extras.html</link>
       <guid>https://www.isa-afp.org/entries/Finite-Map-Extras.html</guid>
       <dc:creator> Javier Díaz       </dc:creator>
       <pubDate>12 Oct 2020 00:00:00 +0000</pubDate>
       <description>
This entry includes useful syntactic sugar, new operators and functions, and
their associated lemmas for finite maps which currently are not
present in the standard Finite_Map theory.</description>
    </item>
    <item>
       <title>A Formal Model of the Safely Composable Document Object Model with Shadow Roots</title>
              <link>https://www.isa-afp.org/entries/Shadow_SC_DOM.html</link>
       <guid>https://www.isa-afp.org/entries/Shadow_SC_DOM.html</guid>
       <dc:creator> Achim D. Brucker, Michael Herzberg       </dc:creator>
       <pubDate>28 Sep 2020 00:00:00 +0000</pubDate>
       <description>
In this AFP entry, we extend our formalization of the safely
composable DOM with Shadow Roots. This is a proposal for Shadow Roots
with stricter safety guarantess than the standard compliant
formalization (see &#34;Shadow DOM&#34;). Shadow Roots are a recent
proposal of the web community to support a component-based development
approach for client-side web applications.  Shadow roots are a
significant extension to the DOM standard and, as web standards are
condemned to be backward compatible, such extensions often result in
complex specification that may contain unwanted subtleties that can be
detected by a formalization.  Our Isabelle/HOL formalization is, in
the sense of object-orientation, an extension of our formalization of
the core DOM and enjoys the same basic properties, i.e., it is
extensible, i.e., can be extended without the need of re-proving
already proven properties and executable, i.e., we can generate
executable code from our specification. We exploit the executability
to show that our formalization complies to the official standard of
the W3C, respectively, the WHATWG.</description>
    </item>
    <item>
       <title>A Formalization of Safely Composable Web Components</title>
              <link>https://www.isa-afp.org/entries/SC_DOM_Components.html</link>
       <guid>https://www.isa-afp.org/entries/SC_DOM_Components.html</guid>
       <dc:creator> Achim D. Brucker, Michael Herzberg       </dc:creator>
       <pubDate>28 Sep 2020 00:00:00 +0000</pubDate>
       <description>
While the (safely composable) DOM with shadow trees provide the
technical basis for defining web components, it does neither defines
the concept of web components nor specifies the safety properties that
web components should guarantee. Consequently, the standard also does
not discuss how or even if the methods for modifying the DOM respect
component boundaries. In AFP entry, we present a formally verified
model of safely composable web components and define safety properties
which ensure that different web components can only interact with each
other using well-defined interfaces. Moreover, our verification of the
application programming interface (API) of the DOM revealed numerous
invariants that implementations of the DOM API need to preserve to
ensure the integrity of components.  In comparison to the strict
standard compliance formalization of Web Components in the AFP entry
&#34;DOM_Components&#34;, the notion of components in this entry
(based on &#34;SC_DOM&#34; and &#34;Shadow_SC_DOM&#34;) provides
much stronger safety guarantees.</description>
    </item>
    <item>
       <title>The Safely Composable DOM</title>
              <link>https://www.isa-afp.org/entries/Core_SC_DOM.html</link>
       <guid>https://www.isa-afp.org/entries/Core_SC_DOM.html</guid>
       <dc:creator> Achim D. Brucker, Michael Herzberg       </dc:creator>
       <pubDate>28 Sep 2020 00:00:00 +0000</pubDate>
       <description>
In this AFP entry, we formalize the core of the Safely Composable
Document Object Model (SC DOM). The SC DOM improve the standard DOM
(as formalized in the AFP entry &#34;Core DOM&#34;) by strengthening
the tree boundaries set by shadow roots: in the SC DOM, the shadow
root is a sub-class of the document class (instead of a base class).
This modifications also results in changes to some API methods (e.g.,
getOwnerDocument) to return the nearest shadow root rather than the
document root. As a result, many API methods that, when called on a
node inside a shadow tree, would previously ``break out&#39;&#39;
and return or modify nodes that are possibly outside the shadow tree,
now stay within its boundaries. This change in behavior makes programs
that operate on shadow trees more predictable for the developer and
allows them to make more assumptions about other code accessing the
DOM.</description>
    </item>
    <item>
       <title>Syntax-Independent Logic Infrastructure</title>
              <link>https://www.isa-afp.org/entries/Syntax_Independent_Logic.html</link>
       <guid>https://www.isa-afp.org/entries/Syntax_Independent_Logic.html</guid>
       <dc:creator> Andrei Popescu, Dmitriy Traytel       </dc:creator>
       <pubDate>16 Sep 2020 00:00:00 +0000</pubDate>
       <description>
We formalize a notion of logic whose terms and formulas are kept
abstract. In particular, logical connectives, substitution, free
variables, and provability are not defined, but characterized by their
general properties as locale assumptions. Based on this abstract
characterization, we develop further reusable reasoning
infrastructure. For example, we define parallel substitution (along
with proving its characterizing theorems) from single-point
substitution. Similarly, we develop a natural deduction style proof
system starting from the abstract Hilbert-style one. These one-time
efforts benefit different concrete logics satisfying our locales&#39;
assumptions.  We instantiate the syntax-independent logic
infrastructure to Robinson arithmetic (also known as Q) in the AFP
entry &lt;a
href=&#34;https://www.isa-afp.org/entries/Robinson_Arithmetic.html&#34;&gt;Robinson_Arithmetic&lt;/a&gt;
and to hereditarily finite set theory in the AFP entries &lt;a
href=&#34;https://www.isa-afp.org/entries/Goedel_HFSet_Semantic.html&#34;&gt;Goedel_HFSet_Semantic&lt;/a&gt;
and &lt;a
href=&#34;https://www.isa-afp.org/entries/Goedel_HFSet_Semanticless.html&#34;&gt;Goedel_HFSet_Semanticless&lt;/a&gt;,
which are part of our formalization of G&amp;ouml;del&#39;s
Incompleteness Theorems described in our CADE-27 paper &lt;a
href=&#34;https://dx.doi.org/10.1007/978-3-030-29436-6_26&#34;&gt;A
Formally Verified Abstract Account of Gödel&#39;s Incompleteness
Theorems&lt;/a&gt;.</description>
    </item>
    <item>
       <title>Robinson Arithmetic</title>
              <link>https://www.isa-afp.org/entries/Robinson_Arithmetic.html</link>
       <guid>https://www.isa-afp.org/entries/Robinson_Arithmetic.html</guid>
       <dc:creator> Andrei Popescu, Dmitriy Traytel       </dc:creator>
       <pubDate>16 Sep 2020 00:00:00 +0000</pubDate>
       <description>
We instantiate our syntax-independent logic infrastructure developed
in &lt;a
href=&#34;https://www.isa-afp.org/entries/Syntax_Independent_Logic.html&#34;&gt;a
separate AFP entry&lt;/a&gt; to the FOL theory of Robinson arithmetic
(also known as Q). The latter was formalised using Nominal Isabelle by
adapting &lt;a
href=&#34;https://www.isa-afp.org/entries/Incompleteness.html&#34;&gt;Larry
Paulson’s formalization of the Hereditarily Finite Set
theory&lt;/a&gt;.</description>
    </item>
    <item>
       <title>An Abstract Formalization of G&ouml;del's Incompleteness Theorems</title>
              <link>https://www.isa-afp.org/entries/Goedel_Incompleteness.html</link>
       <guid>https://www.isa-afp.org/entries/Goedel_Incompleteness.html</guid>
       <dc:creator> Andrei Popescu, Dmitriy Traytel       </dc:creator>
       <pubDate>16 Sep 2020 00:00:00 +0000</pubDate>
       <description>
We present an abstract formalization of G&amp;ouml;del&#39;s
incompleteness theorems. We analyze sufficient conditions for the
theorems&#39; applicability to a partially specified logic. Our
abstract perspective enables a comparison between alternative
approaches from the literature. These include Rosser&#39;s variation
of the first theorem, Jeroslow&#39;s variation of the second theorem,
and the Swierczkowski&amp;ndash;Paulson semantics-based approach. This
AFP entry is the main entry point to the results described in our
CADE-27 paper &lt;a
href=&#34;https://dx.doi.org/10.1007/978-3-030-29436-6_26&#34;&gt;A
Formally Verified Abstract Account of Gödel&#39;s Incompleteness
Theorems&lt;/a&gt;.  As part of our abstract formalization&#39;s
validation, we instantiate our locales twice in the separate AFP
entries &lt;a
href=&#34;https://www.isa-afp.org/entries/Goedel_HFSet_Semantic.html&#34;&gt;Goedel_HFSet_Semantic&lt;/a&gt;
and &lt;a
href=&#34;https://www.isa-afp.org/entries/Goedel_HFSet_Semanticless.html&#34;&gt;Goedel_HFSet_Semanticless&lt;/a&gt;.</description>
    </item>
    <item>
       <title>From Abstract to Concrete G&ouml;del's Incompleteness Theorems&mdash;Part II</title>
              <link>https://www.isa-afp.org/entries/Goedel_HFSet_Semanticless.html</link>
       <guid>https://www.isa-afp.org/entries/Goedel_HFSet_Semanticless.html</guid>
       <dc:creator> Andrei Popescu, Dmitriy Traytel       </dc:creator>
       <pubDate>16 Sep 2020 00:00:00 +0000</pubDate>
       <description>
We validate an abstract formulation of G&amp;ouml;del&#39;s Second
Incompleteness Theorem from a &lt;a
href=&#34;https://www.isa-afp.org/entries/Goedel_Incompleteness.html&#34;&gt;separate
AFP entry&lt;/a&gt; by instantiating it to the case of &lt;i&gt;finite
consistent extensions of the Hereditarily Finite (HF) Set
theory&lt;/i&gt;, i.e., consistent FOL theories extending the HF Set
theory with a finite set of axioms.  The instantiation draws heavily
on infrastructure previously developed by Larry Paulson in his &lt;a
href=&#34;https://www.isa-afp.org/entries/Incompleteness.html&#34;&gt;direct
formalisation of the concrete result&lt;/a&gt;. It strengthens
Paulson&#39;s formalization of G&amp;ouml;del&#39;s Second from that
entry by &lt;i&gt;not&lt;/i&gt; assuming soundness, and in fact not
relying on any notion of model or semantic interpretation. The
strengthening was obtained by first replacing some of Paulson’s
semantic arguments with proofs within his HF calculus, and then
plugging in some of Paulson&#39;s (modified) lemmas to instantiate
our soundness-free G&amp;ouml;del&#39;s Second locale.</description>
    </item>
    <item>
       <title>From Abstract to Concrete G&ouml;del's Incompleteness Theorems&mdash;Part I</title>
              <link>https://www.isa-afp.org/entries/Goedel_HFSet_Semantic.html</link>
       <guid>https://www.isa-afp.org/entries/Goedel_HFSet_Semantic.html</guid>
       <dc:creator> Andrei Popescu, Dmitriy Traytel       </dc:creator>
       <pubDate>16 Sep 2020 00:00:00 +0000</pubDate>
       <description>
We validate an abstract formulation of G&amp;ouml;del&#39;s First and
Second Incompleteness Theorems from a &lt;a
href=&#34;https://www.isa-afp.org/entries/Goedel_Incompleteness.html&#34;&gt;separate
AFP entry&lt;/a&gt; by instantiating them to the case of
&lt;i&gt;finite sound extensions of the Hereditarily Finite (HF) Set
theory&lt;/i&gt;, i.e., FOL theories extending the HF Set theory with
a finite set of axioms that are sound in the standard model. The
concrete results had been previously formalised in an &lt;a
href=&#34;https://www.isa-afp.org/entries/Incompleteness.html&#34;&gt;AFP
entry by Larry Paulson&lt;/a&gt;; our instantiation reuses the
infrastructure developed in that entry.</description>
    </item>
    <item>
       <title>A Formal Model of Extended Finite State Machines</title>
              <link>https://www.isa-afp.org/entries/Extended_Finite_State_Machines.html</link>
       <guid>https://www.isa-afp.org/entries/Extended_Finite_State_Machines.html</guid>
       <dc:creator> Michael Foster, Achim D. Brucker, Ramsay G. Taylor, John Derrick       </dc:creator>
       <pubDate>07 Sep 2020 00:00:00 +0000</pubDate>
       <description>
In this AFP entry, we provide a formalisation of extended finite state
machines (EFSMs) where models are represented as finite sets of
transitions between states. EFSMs execute traces to produce observable
outputs. We also define various simulation and equality metrics for
EFSMs in terms of traces and prove their strengths in relation to each
other. Another key contribution is a framework of function definitions
such that LTL properties can be phrased over EFSMs. Finally, we
provide a simple example case study in the form of a drinks machine.</description>
    </item>
    <item>
       <title>Inference of Extended Finite State Machines</title>
              <link>https://www.isa-afp.org/entries/Extended_Finite_State_Machine_Inference.html</link>
       <guid>https://www.isa-afp.org/entries/Extended_Finite_State_Machine_Inference.html</guid>
       <dc:creator> Michael Foster, Achim D. Brucker, Ramsay G. Taylor, John Derrick       </dc:creator>
       <pubDate>07 Sep 2020 00:00:00 +0000</pubDate>
       <description>
In this AFP entry, we provide a formal implementation of a
state-merging technique to infer extended finite state machines
(EFSMs), complete with output and update functions, from black-box
traces. In particular, we define the subsumption in context relation
as a means of determining whether one transition is able to account
for the behaviour of another. Building on this, we define the direct
subsumption relation, which lifts the subsumption in context relation
to EFSM level such that we can use it to determine whether it is safe
to merge a given pair of transitions. Key proofs include the
conditions necessary for subsumption to occur and that subsumption
and direct subsumption are preorder relations.  We also provide a
number of different heuristics which can be used to abstract away
concrete values into registers so that more states and transitions can
be merged and provide proofs of the various conditions which must hold
for these abstractions to subsume their ungeneralised counterparts. A
Code Generator setup to create executable Scala code is also defined.</description>
    </item>
    <item>
       <title>Practical Algebraic Calculus Checker</title>
              <link>https://www.isa-afp.org/entries/PAC_Checker.html</link>
       <guid>https://www.isa-afp.org/entries/PAC_Checker.html</guid>
       <dc:creator> Mathias Fleury, Daniela Kaufmann       </dc:creator>
       <pubDate>31 Aug 2020 00:00:00 +0000</pubDate>
       <description>
Generating and checking proof certificates is important to increase
the trust in automated reasoning tools. In recent years formal
verification using computer algebra became more important and is
heavily used in automated circuit verification.  An existing proof
format which covers algebraic reasoning and allows efficient proof
checking is the practical algebraic calculus (PAC). In this
development, we present the verified checker Pastèque that is obtained
by synthesis via the Refinement Framework.  This is the formalization
going with our FMCAD&#39;20 tool presentation.</description>
    </item>
    <item>
       <title>Some classical results in inductive inference of recursive functions</title>
              <link>https://www.isa-afp.org/entries/Inductive_Inference.html</link>
       <guid>https://www.isa-afp.org/entries/Inductive_Inference.html</guid>
       <dc:creator> Frank J. Balbach       </dc:creator>
       <pubDate>31 Aug 2020 00:00:00 +0000</pubDate>
       <description>
&lt;p&gt; This entry formalizes some classical concepts and results
from inductive inference of recursive functions. In the basic setting
a partial recursive function (&#34;strategy&#34;) must identify
(&#34;learn&#34;) all functions from a set (&#34;class&#34;) of
recursive functions. To that end the strategy receives more and more
values $f(0), f(1), f(2), \ldots$ of some function $f$ from the given
class and in turn outputs descriptions of partial recursive functions,
for example, Gödel numbers. The strategy is considered successful if
the sequence of outputs (&#34;hypotheses&#34;) converges to a
description of $f$. A class of functions learnable in this sense is
called &#34;learnable in the limit&#34;. The set of all these
classes is denoted by LIM. &lt;/p&gt;  &lt;p&gt; Other types of
inference considered are finite learning (FIN), behaviorally correct
learning in the limit (BC), and some variants of LIM with restrictions
on the hypotheses: total learning (TOTAL), consistent learning (CONS),
and class-preserving learning (CP). The main results formalized are
the proper inclusions $\mathrm{FIN} \subset \mathrm{CP} \subset
\mathrm{TOTAL} \subset \mathrm{CONS} \subset \mathrm{LIM} \subset
\mathrm{BC} \subset 2^{\mathcal{R}}$, where $\mathcal{R}$ is the set
of all total recursive functions.  Further results show that for all
these inference types except CONS, strategies can be assumed to be
total recursive functions; that all inference types but CP are closed
under the subset relation between classes; and that no inference type
is closed under the union of classes. &lt;/p&gt;  &lt;p&gt; The above
is based on a formalization of recursive functions heavily inspired by
the &lt;a
href=&#34;https://www.isa-afp.org/entries/Universal_Turing_Machine.html&#34;&gt;Universal
Turing Machine&lt;/a&gt; entry by Xu et al., but different in that it
models partial functions with codomain &lt;em&gt;nat
option&lt;/em&gt;. The formalization contains a construction of a
universal partial recursive function, without resorting to Turing
machines, introduces decidability and recursive enumerability, and
proves some standard results: existence of a Kleene normal form, the
&lt;em&gt;s-m-n&lt;/em&gt; theorem, Rice&#39;s theorem, and assorted
fixed-point theorems (recursion theorems) by Kleene, Rogers, and
Smullyan. &lt;/p&gt;</description>
    </item>
    <item>
       <title>Relational Disjoint-Set Forests</title>
              <link>https://www.isa-afp.org/entries/Relational_Disjoint_Set_Forests.html</link>
       <guid>https://www.isa-afp.org/entries/Relational_Disjoint_Set_Forests.html</guid>
       <dc:creator> Walter Guttmann       </dc:creator>
       <pubDate>26 Aug 2020 00:00:00 +0000</pubDate>
       <description>
We give a simple relation-algebraic semantics of read and write
operations on associative arrays. The array operations seamlessly
integrate with assignments in the Hoare-logic library. Using relation
algebras and Kleene algebras we verify the correctness of an
array-based implementation of disjoint-set forests with a naive union
operation and a find operation with path compression.</description>
    </item>
    <item>
       <title>Putting the `K' into Bird's derivation of Knuth-Morris-Pratt string matching</title>
              <link>https://www.isa-afp.org/entries/BirdKMP.html</link>
       <guid>https://www.isa-afp.org/entries/BirdKMP.html</guid>
       <dc:creator> Peter Gammie       </dc:creator>
       <pubDate>25 Aug 2020 00:00:00 +0000</pubDate>
       <description>
Richard Bird and collaborators have proposed a derivation of an
intricate cyclic program that implements the Morris-Pratt string
matching algorithm. Here we provide a proof of total correctness for
Bird&#39;s derivation and complete it by adding Knuth&#39;s
optimisation.</description>
    </item>
    <item>
       <title>Amicable Numbers</title>
              <link>https://www.isa-afp.org/entries/Amicable_Numbers.html</link>
       <guid>https://www.isa-afp.org/entries/Amicable_Numbers.html</guid>
       <dc:creator> Angeliki Koutsoukou-Argyraki       </dc:creator>
       <pubDate>04 Aug 2020 00:00:00 +0000</pubDate>
       <description>
This is a formalisation of Amicable Numbers, involving some relevant
material including Euler&#39;s sigma function, some relevant
definitions, results and examples as well as rules such as
Th&amp;#257;bit ibn Qurra&#39;s Rule, Euler&#39;s Rule, te
Riele&#39;s Rule and Borho&#39;s Rule with breeders.</description>
    </item>
    <item>
       <title>Ordinal Partitions</title>
              <link>https://www.isa-afp.org/entries/Ordinal_Partitions.html</link>
       <guid>https://www.isa-afp.org/entries/Ordinal_Partitions.html</guid>
       <dc:creator> Lawrence C. Paulson       </dc:creator>
       <pubDate>03 Aug 2020 00:00:00 +0000</pubDate>
       <description>
The theory of partition relations concerns generalisations of
Ramsey&#39;s theorem. For any ordinal $\alpha$, write $\alpha \to
(\alpha, m)^2$ if for each function $f$ from unordered pairs of
elements of $\alpha$ into $\{0,1\}$, either there is a subset
$X\subseteq \alpha$ order-isomorphic to $\alpha$ such that
$f\{x,y\}=0$ for all $\{x,y\}\subseteq X$, or there is an $m$ element
set $Y\subseteq \alpha$ such that $f\{x,y\}=1$ for all
$\{x,y\}\subseteq Y$. (In both cases, with $\{x,y\}$ we require
$x\not=y$.) In particular, the infinite Ramsey theorem can be written
in this notation as $\omega \to (\omega, \omega)^2$, or if we
restrict $m$ to the positive integers as above, then $\omega \to
(\omega, m)^2$ for all $m$.  This entry formalises Larson&#39;s proof
of $\omega^\omega \to (\omega^\omega, m)^2$ along with a similar proof
of a result due to Specker: $\omega^2 \to (\omega^2, m)^2$. Also
proved is a necessary result by Erdős and Milner:
$\omega^{1+\alpha\cdot n} \to (\omega^{1+\alpha}, 2^n)^2$.</description>
    </item>
    <item>
       <title>A Formal Proof of The Chandy--Lamport Distributed Snapshot Algorithm</title>
              <link>https://www.isa-afp.org/entries/Chandy_Lamport.html</link>
       <guid>https://www.isa-afp.org/entries/Chandy_Lamport.html</guid>
       <dc:creator> Ben Fiedler, Dmitriy Traytel       </dc:creator>
       <pubDate>21 Jul 2020 00:00:00 +0000</pubDate>
       <description>
We provide a suitable distributed system model and implementation of the
Chandy--Lamport distributed snapshot algorithm [ACM Transactions on
Computer Systems, 3, 63-75, 1985]. Our main result is a formal
termination and correctness proof of the Chandy--Lamport algorithm and
its use in stable property detection.</description>
    </item>
    <item>
       <title>Relational Characterisations of Paths</title>
              <link>https://www.isa-afp.org/entries/Relational_Paths.html</link>
       <guid>https://www.isa-afp.org/entries/Relational_Paths.html</guid>
       <dc:creator> Walter Guttmann, Peter Höfner       </dc:creator>
       <pubDate>13 Jul 2020 00:00:00 +0000</pubDate>
       <description>
Binary relations are one of the standard ways to encode, characterise
and reason about graphs. Relation algebras provide equational axioms
for a large fragment of the calculus of binary relations. Although
relations are standard tools in many areas of mathematics and
computing, researchers usually fall back to point-wise reasoning when
it comes to arguments about paths in a graph. We present a purely
algebraic way to specify different kinds of paths in Kleene relation
algebras, which are relation algebras equipped with an operation for
reflexive transitive closure. We study the relationship between paths
with a designated root vertex and paths without such a vertex. Since
we stay in first-order logic this development helps with mechanising
proofs. To demonstrate the applicability of the algebraic framework we
verify the correctness of three basic graph algorithms.</description>
    </item>
    <item>
       <title>A Formally Verified Checker of the Safe Distance Traffic Rules for Autonomous Vehicles</title>
              <link>https://www.isa-afp.org/entries/Safe_Distance.html</link>
       <guid>https://www.isa-afp.org/entries/Safe_Distance.html</guid>
       <dc:creator> Albert Rizaldi, Fabian Immler       </dc:creator>
       <pubDate>01 Jun 2020 00:00:00 +0000</pubDate>
       <description>
The Vienna Convention on Road Traffic defines the safe distance
traffic rules informally. This could make autonomous vehicle liable
for safe-distance-related accidents because there is no clear
definition of how large a safe distance is. We provide a formally
proven prescriptive definition of a safe distance, and checkers which
can decide whether an autonomous vehicle is obeying the safe distance
rule. Not only does our work apply to the domain of law, but it also
serves as a specification for autonomous vehicle manufacturers and for
online verification of path planners.</description>
    </item>
  </channel>
</rss>
