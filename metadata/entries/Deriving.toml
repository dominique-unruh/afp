title = "Deriving class instances for datatypes"
date = 2015-03-11
topics = [
  "Computer science/Data structures",
]
abstract = """
<p>We provide a framework for registering automatic methods
to derive class instances of datatypes,
as it is possible using Haskell's “<tt>deriving Ord, Show, ...</tt>” feature.</p>
<p>We further implemented such automatic methods to derive comparators, linear orders, parametrizable equality functions,
and hash-functions which are required in the
Isabelle Collection Framework and the Container Framework.
Moreover, for the tactic of Blanchette to show that a datatype is countable, we implemented a
wrapper so that this tactic becomes accessible in our framework. All of the generators are based on
the infrastructure that is provided by the BNF-based datatype package.</p>
<p>Our formalization was performed as part of the <a href=\"http://cl-informatik.uibk.ac.at/software/ceta\">IsaFoR/CeTA</a> project.
With our new tactics we could remove
several tedious proofs for (conditional) linear orders, and conditional equality operators
within IsaFoR and the Container Framework.</p>"""
license = "bsd"
note = ""

[authors]

[authors.sternagel]
email = "sternagel_email"

[authors.thiemann]
homepage = "thiemann_homepage"

[contributors]

[notify]
thiemann = "thiemann_email"

[history]

[extra]

[related]
