title = "Jinja with Threads"
date = 2007-12-03
topics = [
  "Computer science/Programming languages/Language definitions",
]
abstract = "We extend the Jinja source code semantics by Klein and Nipkow with Java-style arrays and threads. Concurrency is captured in a generic framework semantics for adding concurrency through interleaving to a sequential semantics, which features dynamic thread creation, inter-thread communication via shared memory, lock synchronisation and joins. Also, threads can suspend themselves and be notified by others. We instantiate the framework with the adapted versions of both Jinja source and byte code and show type safety for the multithreaded case. Equally, the compiler from source to byte code is extended, for which we prove weak bisimilarity between the source code small step semantics and the defensive Jinja virtual machine. On top of this, we formalise the JMM and show the DRF guarantee and consistency. For description of the different parts, see Lochbihler's papers at FOOL 2008, ESOP 2010, ITP 2011, and ESOP 2012."
license = "bsd"
note = ""

[authors]

[authors.lochbihler]
homepage = "lochbihler_homepage"

[contributors]

[notify]
lochbihler = "lochbihler_email1"

[history]

[extra]

[related]
